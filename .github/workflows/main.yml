name: Setup Ngrok for RDP on Windows

on:
  workflow_dispatch:

jobs:
  setup-ngrok-rdp:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "$env:USERPROFILE
grok"
        Remove-Item -Path "ngrok.zip"

    - name: Add Ngrok to PATH
      run: |
        $env:PATH += ";$env:USERPROFILE
grok"

    - name: Authenticate Ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        & "$env:USERPROFILE
grok
grok.exe" authtoken $env:NGROK_AUTH_TOKEN

    - name: Enable RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Create RDP User
      run: |
        net user Ankletee Pa$$word /add
        net localgroup administrators Ankletee /add

    - name: Start Ngrok Tunnel for RDP
      run: |
        Start-Process -FilePath "$env:USERPROFILE
grok
grok.exe" -ArgumentList "tcp 3389" -NoNewWindow

    - name: Display Ngrok URL
      run: |
        Start-Sleep -Seconds 10
        & "$env:USERPROFILE
grok
grok.exe" tcp 3389 --log=stdout | Select-String -Pattern "tcp://" | ForEach-Object { $_.Matches.Groups[0].Value }
